#!/bin/bash
#▶ Simple file system navigator/viewer. See License file for copyright and license info.
#▶ Usage: /path/to/nav && cd "$(cat /tmp/nav_dir.txt)"
#▶ Controls: <hjkl> or <arrow keys> to move, </> to search, <q> to quit
#▶ Install: Add an alias for this to your ~/.bash_aliases file:
#    alias f='/path/to/this_script && cd "$(cat /tmp/nav_dir.txt)"'

update_names() { # Sort the filenames and group them using html-like tags:
NAMES="\
<@public dirs@>\n$(find -L . -maxdepth 1 -type d | sed 's/^\.\///' | grep -v '^\.' | sort -f)\n<@end@>
<@private dirs@>\n$(find -L . -maxdepth 1 -type d | sed 's/^\.\///' | grep '^\.' | grep -v '^.$' | sort -f)\n<@end@>
<@public files@>\n$(find -L . -maxdepth 1 -type f | sed 's/^\.\///' | grep -v '^\.' | sort -f)\n<@end@>
<@private files@>\n$(find -L . -maxdepth 1 -type f | sed 's/^\.\///' | grep '^\.' | sort -f)\n<@end@>
"
FORMATTED_NAMES="$(
printf "$NAMES" | cut -c "1-$((W-1))" | # Set color-coding for each tagged group of names:
    sed '
        /^\s*$/d;
        /<@public dirs@>/,/<@end@>/s/^/\\033[93m\//
        /<@private dirs@>/,/<@end@>/s/^/\\033[91m\//
        /<@public files@>/,/<@end@>/s/^/\\033[37m/
        /<@private files@>/,/<@end@>/s/^/\\033[32m/
        /<@.*@>/d
        s/$/\\033[0m/
    '
)"
SORTED_NAMES="$(printf "$NAMES" | sed '/^\s*$/d; /^<@.*@>$/d')"
}

REFRESH=1
CURSOR_POS=0
SCROLL_HEIGHT=0
W="$(tput cols)" && update_names
# Hide user input:
stty -echo
# Navigation loop:
while (true) do
    # Get the terminal dimensions: (so we don't over-fill the screen)
    PREV_W="$W" && W="$(tput cols)" && [ ! "$PREV_W" = "$W" ] && update_names
    PREV_H="$H" && H="$(tput lines)" && [ ! "$PREV_H" = "$H" ] && REFRESH=1
    NUM_FILES="$(echo "$FORMATTED_NAMES" | wc -l)"
    # Keep the cursor in bounds:
    #REFRESH=1
    [ $CURSOR_POS -gt $((NUM_FILES-1)) ] && CURSOR_POS=$((NUM_FILES-1))              # Last file.
    [ $CURSOR_POS -lt 0 ] && CURSOR_POS=0                                            # First file.
    [ $CURSOR_POS -lt $((SCROLL_HEIGHT)) ] && SCROLL_HEIGHT=$CURSOR_POS && REFRESH=1 # First displayed line:
    [ $CURSOR_POS -gt $((SCROLL_HEIGHT + H - 2)) ] &&                                # Last displayed line:
        SCROLL_HEIGHT=$((CURSOR_POS-H+2)) && REFRESH=1
    [ $SCROLL_HEIGHT -lt 0 ] && SCROLL_HEIGHT=0 && REFRESH=1
    # Draw the diplay: ===============================================================================
    [ "$REFRESH" = "1" ] &&
        clear &&
        # Print the current directory: (formatted to be yellow)
        printf "\033[93m$(echo "$PWD" | cut -c "1-$((W))")\033[0m\n" &&
        # Print the file names: (with leading space)
        printf "$(printf "$FORMATTED_NAMES" | sed 's/^/ /' | sed -n ' '"$((SCROLL_HEIGHT+1))"','"$((H+SCROLL_HEIGHT-1))"'p')"
    # Move the cursor:
    printf "\033[$((CURSOR_POS+2-SCROLL_HEIGHT));0H"
    # Don't refresh screen unless needed:
    REFRESH=0
    # Get user input: ================================================================================
    read -rsn 1 INPUT
    # Search with '/' key:
    [ "$INPUT" = '/' ] && read -rsn 1 INPUT &&
        CURSOR_POS="$(printf "$SORTED_NAMES" | grep -n "^${INPUT}" | cut -d ':' -f 1 | head -n 1)" &&
        CURSOR_POS=$((CURSOR_POS-1)) && INPUT="" && REFRESH=1
    # Convert arrow key escape codes into hjkl form:
    [ "$INPUT" = "$(printf "\033")" ] && read -rsn 1 INPUT && [ "$INPUT" = "[" ] && read -rsn 1 INPUT
    [ "$INPUT" = "D" ] && INPUT="h"; [ "$INPUT" = "C" ] && INPUT="l" # Left and right.
    [ "$INPUT" = "A" ] && INPUT="k"; [ "$INPUT" = "B" ] && INPUT="j" # Up and down.
    # Quit:
    [ "$INPUT" = "q" ] && break
    # Goto ..:
    [ "$INPUT" = "h" ] &&
        PREV_FNAME="${PWD##*/}" && # Get the name of the current dir.
        cd ".." && REFRESH=1 && update_names && # Set cursor on dir we just came from.
        CURSOR_POS="$(printf "$SORTED_NAMES" | grep -n "^$PREV_FNAME\$" | cut -d ':' -f 1)" && CURSOR_POS="$((CURSOR_POS-1))"
    # Goto dir:
    [ "$INPUT" = "l" ] &&
        cd "$(echo "$SORTED_NAMES" | tr '\n' '\t' | cut -f "$((CURSOR_POS+1))")" &&
        SCROLL_HEIGHT=0 &&
        CURSOR_POS=0 &&
        REFRESH=1 &&
        update_names
    # Up:
    [ "$INPUT" = "k" ] && [ ! "$CURSOR_POS" = "0" ] && CURSOR_POS=$((CURSOR_POS-1))
    # Down:
    [ "$INPUT" = "j" ] && [ ! "$CURSOR_POS" -gt "$NUM_FILES" ] && CURSOR_POS=$((CURSOR_POS+1))
done
# Clear formatting, move cursor to bottom of the terminal.
N="$(echo "$SORTED_NAMES" | wc -l)"
N=$((N+1))
[ $N -lt $H ] && N=$((N+1))
printf "\033[$N;0H \033[0m \033[0J \033[$N;0H"
# Show user input:
stty echo
printf "$(pwd)" > /tmp/nav_dir.txt # Use this to set your dir!
